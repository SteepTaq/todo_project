syntax = "proto3";

package todo;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/SteepTaq/todo_project/pkg/proto/gen/todo/v1;todov1";

service TodoService {
    rpc GetTask(GetTaskRequest) returns (GetTaskResponse);
    rpc CreateTask(CreateTaskRequest) returns (CreateTaskResponse);
    rpc UpdateTask(UpdateTaskRequest) returns (UpdateTaskResponse);
    rpc DeleteTask(DeleteTaskRequest) returns (DeleteTaskResponse);
    rpc GetAllTasks(GetAllTasksRequest) returns (GetAllTasksResponse);
}

message Task {
    string task_id = 1;
    string title = 2;
    string description = 3;
    TaskStatus status = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6; 
}

message GetAllTasksRequest {
    // Сообщение GetAllTasksRequest не требует дополнительных полей для получения всех задач.
}

message GetAllTasksResponse {
    repeated Task tasks = 1;
}

message GetTaskRequest {
    string id = 1;
}

message GetTaskResponse {
    Task task = 1;
}

message CreateTaskRequest {
    Task task = 1;
}

message CreateTaskResponse {
    bool success = 1;
    Task task = 2;
}

message UpdateTaskRequest {
    Task task = 1;
}

message UpdateTaskResponse {
    Task task = 1;
}

message DeleteTaskRequest { 
    string task_id = 1;
}

message DeleteTaskResponse {
    bool success = 1;
    string task_id = 2;
}


enum TaskStatus {
    TASK_STATUS_PENDING = 0;
    TASK_STATUS_IN_PROGRESS = 1;
    TASK_STATUS_COMPLETED = 2;
}




// protoc -I pkg/proto   pkg/proto/todo/*.proto   --go_out=pkg/proto/gen   --go_opt=paths=source_relative   --go-grpc_out=pkg/proto/gen   --go-grpc_opt=paths=source_relative